# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*' # We will publish new version for tag which follows 'v*.*.*' format

env:
  SERVICE_NAME: qupath-extension-jinput

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      uses: gradle/gradle-build-action@v2
      with:
        arguments: publish
      env:
        TOKEN: ${{ secrets.JAVA_TOKEN }}

  determine_should_publish_new_version: # Publish new version for new tags
    runs-on: ubuntu-latest
    outputs:
      PUBLISH_NEW_VERSION: ${{ steps.determine_should_publish_new_version.outputs.PUBLISH_NEW_VERSION }}
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v4
      - name: Determine should publish docker image
        id: determine_should_publish_new_version
        run: |
          PUBLISH_NEW_VERSION=false
          if [[ $(git tag --points-at HEAD) != '' ]]; then
            PUBLISH_NEW_VERSION=true
          fi
          echo "PUBLISH_NEW_VERSION=${PUBLISH_NEW_VERSION}" >> $GITHUB_OUTPUT

  publish-jar:
    runs-on: ubuntu-latest
    needs: [ determine_should_publish_new_version, build]
    if: ${{ needs.determine_should_publish_new_version.outputs.PUBLISH_NEW_VERSION == 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout local repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}/${{ env.SERVICE_NAME }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Publish jar
        run: ./gradlew publish --no-daemon
        working-directory: ${{ github.workspace }}/${{ env.SERVICE_NAME }}/
        env:
          GITHUB_TOKEN: ${{ secrets.JAVA_TOKEN }}
